"use client";

import { useEffect, useState } from "react";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Card, CardContent } from "@/components/ui/card";
import {
	CheckCircle,
	Smartphone,
	Globe,
	BarChart,
	Settings,
} from "lucide-react";

export default function Features() {
	const [isVisible, setIsVisible] = useState(false);

	useEffect(() => {
		const observer = new IntersectionObserver(
			([entry]) => {
				if (entry.isIntersecting) {
					setIsVisible(true);
				}
			},
			{ threshold: 0.1 }
		);

		const element = document.getElementById("features-section");
		if (element) observer.observe(element);

		return () => observer.disconnect();
	}, []);

	const featureTabs = [
		{
			id: "platform",
			label: "N·ªÅn t·∫£ng",
			icon: Globe,
			title: "N·ªÅn t·∫£ng E-commerce Hi·ªán ƒë·∫°i",
			description:
				"Giao di·ªán th√¢n thi·ªán, t·ªëi ∆∞u SEO v√† responsive tr√™n m·ªçi thi·∫øt b·ªã",
			features: [
				"Thi·∫øt k·∫ø responsive, t∆∞∆°ng th√≠ch m·ªçi thi·∫øt b·ªã",
				"T·ªëi ∆∞u SEO t·ª± ƒë·ªông, tƒÉng th·ª© h·∫°ng Google",
				"T·ªëc ƒë·ªô t·∫£i trang si√™u nhanh",
				"Giao di·ªán qu·∫£n tr·ªã tr·ª±c quan, d·ªÖ s·ª≠ d·ª•ng",
				"T√≠ch h·ª£p ƒëa ng√¥n ng·ªØ v√† ƒëa ti·ªÅn t·ªá",
				"H·ªó tr·ª£ PWA (Progressive Web App)",
			],
			image: "üåê",
		},
		{
			id: "mobile",
			label: "Mobile App",
			icon: Smartphone,
			title: "·ª®ng d·ª•ng Di ƒë·ªông Native",
			description: "App iOS v√† Android v·ªõi tr·∫£i nghi·ªám mua s·∫Øm tuy·ªát v·ªùi",
			features: [
				"·ª®ng d·ª•ng native cho iOS v√† Android",
				"Push notification th√¥ng minh",
				"Thanh to√°n trong app an to√†n",
				"Offline mode cho tr·∫£i nghi·ªám li·ªÅn m·∫°ch",
				"T√≠ch h·ª£p camera ƒë·ªÉ scan barcode",
				"Geolocation cho giao h√†ng ch√≠nh x√°c",
			],
			image: "üì±",
		},
		{
			id: "analytics",
			label: "Ph√¢n t√≠ch",
			icon: BarChart,
			title: "Analytics & Business Intelligence",
			description: "B√°o c√°o chi ti·∫øt v√† ph√¢n t√≠ch d·ªØ li·ªáu th√¥ng minh",
			features: [
				"Dashboard t·ªïng quan tr·ª±c quan",
				"B√°o c√°o doanh thu theo th·ªùi gian th·ª±c",
				"Ph√¢n t√≠ch h√†nh vi kh√°ch h√†ng",
				"D·ª± b√°o xu h∆∞·ªõng v√† nhu c·∫ßu",
				"ROI tracking cho marketing campaigns",
				"Export b√°o c√°o ƒëa ƒë·ªãnh d·∫°ng",
			],
			image: "üìä",
		},
		{
			id: "management",
			label: "Qu·∫£n l√Ω",
			icon: Settings,
			title: "H·ªá th·ªëng Qu·∫£n l√Ω To√†n di·ªán",
			description: "Qu·∫£n l√Ω s·∫£n ph·∫©m, ƒë∆°n h√†ng v√† kh√°ch h√†ng hi·ªáu qu·∫£",
			features: [
				"Qu·∫£n l√Ω kho h√†ng th√¥ng minh",
				"X·ª≠ l√Ω ƒë∆°n h√†ng t·ª± ƒë·ªông",
				"CRM t√≠ch h·ª£p qu·∫£n l√Ω kh√°ch h√†ng",
				"H·ªá th·ªëng loyalty program",
				"Multi-vendor marketplace support",
				"Inventory forecasting",
			],
			image: "‚öôÔ∏è",
		},
	];

	return (
		<section
			id="features-section"
			className="py-20 bg-gradient-to-b from-white to-amber-50"
		>
			<div className="container mx-auto px-4">
				{/* Header */}
				<div
					className={`text-center mb-16 transition-all duration-1000 ${
						isVisible
							? "opacity-100 translate-y-0"
							: "opacity-0 translate-y-10"
					}`}
				>
					<div className="inline-block px-4 py-2 bg-gradient-to-r from-amber-100 to-orange-100 rounded-full mb-4">
						<span className="text-amber-800 font-semibold text-sm">
							T√çNH NƒÇNG N·ªîI B·∫¨T
						</span>
					</div>

					<h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6">
						C√¥ng ngh·ªá
						<span className="text-transparent bg-clip-text bg-gradient-to-r from-amber-600 to-orange-600">
							{" "}
							ti√™n ti·∫øn{" "}
						</span>
						nh·∫•t
					</h2>

					<p className="text-xl text-gray-600 max-w-3xl mx-auto">
						Kh√°m ph√° nh·ªØng t√≠nh nƒÉng m·∫°nh m·∫Ω gi√∫p doanh nghi·ªáp c·ªßa
						b·∫°n v∆∞·ª£t tr·ªôi trong th·ªã tr∆∞·ªùng c·∫°nh tranh
					</p>
				</div>

				{/* Features Tabs */}
				<div
					className={`transition-all duration-1000 delay-300 ${
						isVisible
							? "opacity-100 translate-y-0"
							: "opacity-0 translate-y-10"
					}`}
				>
					<Tabs defaultValue="platform" className="w-full">
						<TabsList className="grid w-full grid-cols-2 lg:grid-cols-4 mb-12 bg-amber-100/50 p-2 rounded-2xl">
							{featureTabs.map((tab) => (
								<TabsTrigger
									key={tab.id}
									value={tab.id}
									className="flex items-center space-x-2 data-[state=active]:bg-white data-[state=active]:text-amber-900 data-[state=active]:shadow-md rounded-xl py-3"
								>
									<tab.icon className="w-5 h-5" />
									<span className="hidden sm:inline">
										{tab.label}
									</span>
								</TabsTrigger>
							))}
						</TabsList>

						{featureTabs.map((tab) => (
							<TabsContent
								key={tab.id}
								value={tab.id}
								className="mt-0"
							>
								<div className="grid lg:grid-cols-2 gap-12 items-center">
									{/* Content */}
									<div className="space-y-8">
										<div className="space-y-4">
											<h3 className="text-3xl font-bold text-gray-900">
												{tab.title}
											</h3>
											<p className="text-lg text-gray-600">
												{tab.description}
											</p>
										</div>

										<div className="space-y-4">
											{tab.features.map(
												(feature, index) => (
													<div
														key={index}
														className="flex items-start space-x-3"
													>
														<CheckCircle className="w-6 h-6 text-green-500 flex-shrink-0 mt-0.5" />
														<span className="text-gray-700">
															{feature}
														</span>
													</div>
												)
											)}
										</div>
									</div>

									{/* Visual */}
									<Card className="bg-gradient-to-br from-amber-50 to-orange-50 border-0 shadow-2xl">
										<CardContent className="p-12">
											<div className="aspect-square bg-gradient-to-br from-white/50 to-white/20 rounded-3xl flex items-center justify-center backdrop-blur-sm">
												<div className="text-9xl">
													{tab.image}
												</div>
											</div>

											{/* Floating Elements */}
											<div className="relative -mt-8">
												<div className="absolute top-0 left-4 bg-white rounded-xl p-3 shadow-lg animate-float">
													<div className="w-4 h-4 bg-green-500 rounded-full"></div>
												</div>
												<div className="absolute top-8 right-4 bg-white rounded-xl p-3 shadow-lg animate-float-delayed">
													<div className="w-4 h-4 bg-blue-500 rounded-full"></div>
												</div>
												<div className="absolute -top-4 right-12 bg-white rounded-xl p-3 shadow-lg animate-pulse">
													<div className="w-4 h-4 bg-amber-500 rounded-full"></div>
												</div>
											</div>
										</CardContent>
									</Card>
								</div>
							</TabsContent>
						))}
					</Tabs>
				</div>
			</div>
		</section>
	);
}
